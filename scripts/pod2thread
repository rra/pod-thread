#!perl
#
# pod2thread -- Convert POD data to the HTML macro language thread.
#
# Copyright 2002, 2013 by Russ Allbery <rra@stanford.edu>
#
# This program is free software; you may redistribute it and/or modify it
# under the same terms as Perl itself.

require 5.004;

use Getopt::Long qw(GetOptions);
use Pod::Thread ();
use Pod::Usage qw(pod2usage);

use strict;

# Silence -w warnings.
use vars qw($running_under_some_shell);

# Scan the input file and find all of the top-level headings, building a hash
# table of them and associating them with tags suitable for tags.  Returns the
# the CVS Id string if found and the hash table.
sub find_headings {
    my ($file, $navbar) = @_;
    open (FILE, $file) or die "Can't open $file: $!\n";
    local $_;
    my (@headings, $id);
    while (<FILE>) {
        if (s/^=head1\s+//) {
            s/\s+$//;
            next if ($_ eq 'NAME' && $navbar);
            push (@headings, $_);
        }
        $id = $1 if /(\$Id\:.*\$)/;
    }
    close FILE;
    my $section = 1;
    return $id, map { $_ => ('S' . $section++) } @headings;
}

# Insert -- into @ARGV before any single dash argument to hide it from
# Getopt::Long; we want to interpret it as meaning stdin (which Pod::Parser
# does correctly).
my $stdin;
@ARGV = map { $_ eq '-' && !$stdin++ ? ('--', $_) : $_ } @ARGV;

# Parse our options.  Use the same names as Pod::Text for simplicity, and
# default to sentence boundaries turned off for compatibility.
my %options;
Getopt::Long::config ('bundling');
GetOptions (\%options, 'contents|c', 'help|h', 'navbar|n', 'style|s=s',
            'title|t=s') or exit 1;
pod2usage (1) if $options{help};

# If navigation was requested, grab the appropriate hash table.
if ($options{contents} || $options{navbar}) {
    my ($id, %headings) = find_headings ($ARGV[0], $options{navbar});
    $options{id} = $id if $id;
    $options{contents} = \%headings if $options{contents};
    $options{navbar} = \%headings if $options{navbar};
}

# Initialize and run the formatter.
my $parser = Pod::Thread->new (%options);
$parser->parse_from_file (@ARGV);

__END__

=for stopwords
STDIN STDOUT -hn --navbar subclasses

=head1 NAME

pod2thread - Convert POD data to the HTML macro language thread.

=head1 SYNOPSIS

pod2thread [B<-hn>] [B<-s> I<style>] [B<-t> I<title>] [I<input> [I<output>]]

=head1 DESCRIPTION

B<pod2thread> is a front-end for Pod::Thread and its subclasses.  It uses
that module to generate thread source from POD source.

I<input> is the file to read for POD source (the POD can be embedded in
code).  If I<input> isn't given, it defaults to STDIN.  I<output>, if given,
is the file to which to write the thread output.  If I<output> isn't given,
the output is written to STDOUT.

=head1 OPTIONS

=over 4

=item B<-c>, B<--contents>

Generate a table of contents as the first section of the resulting thread
file, with links to each top-level heading.

=item B<-n>, B<--navbar>

Generate a navigation bar at the top of the resulting thread file, with
links to each top-level heading.

=item B<-h>, B<--help>

Print out usage information and exit.

=item B<-s> I<style>, B<--style>=I<style>

In the generated thread source, include a reference to the style sheet
I<style>.  If this option is not given, no style sheet reference will be
included.

=item B<-t> I<title>, B<--title>=I<title>

Use I<title> as the title of the page rather than looking for a NAME section
in the POD document.

=back

=head1 DIAGNOSTICS

If B<pod2thread> fails with errors, see L<Pod::Thread> and L<Pod::Parser>
for information about what those errors might mean.  Internally, it can also
produce the following diagnostic:

=over 4

=item Can't open %s: %s

(F) The specified file, given on the command line as the POD source, could
not be opened.

=item Unknown option: %s

(F) An unknown command line option was given.

=back

In addition, other L<Getopt::Long> error messages may result from invalid
command-line options.

=head1 SEE ALSO

L<Pod::Thread>, L<Pod::Parser>, L<spin(1)>

Current versions of this program are available from my web tools page at
L<http://www.eyrie.org/~eagle/software/web/>.  B<spin> is available from the
same page.

=head1 AUTHOR

Russ Allbery <rra@stanford.edu>.

=head1 COPYRIGHT AND LICENSE

Copyright 2002, 2013 Russ Allbery <rra@stanford.edu>.

This program is free software; you may redistribute it and/or modify it
under the same terms as Perl itself.

=cut
